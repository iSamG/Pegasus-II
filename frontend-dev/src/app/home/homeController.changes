/**
 * Created by kaygee on 2/18/15.
 */

angular.module('home')
    .controller('prHomeController', ['$rootScope', '$scope','$state', 'homeService','surveyService', 'growl',
        'cfpLoadingBar', '$localStorage', '$sessionStorage','$timeout','$interval',
        function($rootScope, $scope, $state, homeService, surveyService, growl, cfpLoadingBar, $localStorage, $sessionStorage,
                 $timeout, $interval){
            $scope.files = [];

            $scope.first_timer = $localStorage.first_timer;


            //Step 1
            $scope.getFile = function(){
                homeService.getFileFromGoogle($scope.files[ $scope.files.length - 1].id)
                    .success(function(data, stuff, more, headers){
                        growl.success('File downloaded successfully from Google', {});
                        return {
                            downloadUrl : data['exportLinks']['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'],
                            filename : $scope.files[ $scope.files.length - 1].name,
                            status : true
                        };
                    })
                    .error(function () {
                        cfpLoadingBar.complete();
                        growl.error("Could not download file from Google. Please ensure the file has been published to the web and retry.", {});
                        $scope.files = [];

                        return {status : true }

                    });
            };


            //Step Three
            $scope.getFileAsJSONandSend= function(){

                if ($scope.files.length) {
                    $scope.surveyDataReturned = {};
                    Tabletop.init({
                        key: $scope.files[$scope.files.length - 1].id,
                        callback: function (data, tabletop) {
                            angular.forEach(data, function (val, prop) {
                                $scope.surveyDataReturned [prop] = {
                                    column_names: data[prop].column_names,
                                    elements: data[prop].elements,
                                    name: data[prop].name,
                                    original_columns: data[prop].original_columns,
                                    pretty_columns: data[prop].pretty_columns
                                };
                                if (prop == 'settings') {
                                    angular.forEach($scope.surveyDataReturned.settings.elements, function (form, index) {
                                        if (form.form_id != '') {
                                            $scope.surveyDataReturned.form_id = form.form_id;
                                        }else{
                                            $scope.surveyDataReturned.form_id = $scope.files[$scope.files.length - 1].name;
                                        }
                                    })
                                }
                            });
                            if (data) {
                                return {
                                    status : !data
                                }
                            } else {
                                growl.error("The file has not been shared to the public", {})
                            }
                        },
                        simpleSheet: false
                    })
                }else{
                    alert("No file selected")
                }
            };

            //Step 2
            $scope.sendFileForConversion = function ( infoToPost ) {
                $scope.disableServerCreateButton = true;
                var retryCounter = 0;
                growl.info('Converting file to XForms', {});
                homeService.sendXLSDownloadUrl(infoToPost)
                    .success(function (data) {
                        if (data.status == 'success') {

                            return {
                                status : true
                            };

                            growl.success('File converted successfully', {});
                            cfpLoadingBar.set(0.3);

                            growl.info('Processing and saving file content into database', {});
                            if ($scope.files.length) {
                                $scope.surveyDataReturned = {};

                            } else {
                                growl.error(data.content, {});
                            }
                        } else if (data.status == 'failed') {
                            if (data.content == "timeout_exception") {
                                if (retryCounter < 3) {
                                    growl.info("A timeout occurred on the server. Retrying file conversion...", {});
                                    $timeout(function () {
                                        $scope.sendFileForConversion();
                                        retryCounter ++
                                    }, 2500);
                                }else{
                                    growl.error("There was a problem converting the file selected", {});
                                }
                            }else{
                                growl.error(data.content, {});
                            }
                            console.log('conversion error---   ', data);
                        }
                    })
                    .error(function (data) {
                        console.log('error--', data);
                        cfpLoadingBar.complete();
                        growl.error("Something went wrong on the server. Please retry", {});
                    })
                    .then(function () {
                        $scope.disableServerCreateButton = false;
                        cfpLoadingBar.complete();
                    });
            };

            $scope.disableServerCreateButton = false;

            $scope.beginPegasusServer = function(){
                $scope.disableServerCreateButton = true;
                cfpLoadingBar.start();
                growl.info('Downloading file from Google Spreadsheets...', {});

                //Step One
                var stepOne = $scope.getFile();

                if (stepOne.status) {
                    $scope.sendFileForConversion(stepOne)
                }

                //Step Three
                $scope.sendFileForConversion();
            };




        }]);